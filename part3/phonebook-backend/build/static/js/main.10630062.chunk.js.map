{"version":3,"sources":["services/phonebook.js","components/AddContactForm.js","components/Contacts.js","components/Error.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newContact","post","id","updatedContact","put","delete","AddContactForm","contacts","setContacts","newName","setNewName","newNumber","setNewNumber","setNotificationMessage","setErrorMessage","updateContact","find","contact","name","phonebookService","map","setTimeout","catch","error","onSubmit","event","preventDefault","number","indexOf","window","confirm","concat","value","onChange","target","type","Contacts","filteredContacts","key","onClick","filter","Error","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","setFilter","Notification","App","useState","notificationMessage","errorMessage","useEffect","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10630062.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/contacts'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newContact) => {\n  const request = axios.post(baseUrl, newContact)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedContact) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedContact)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\nimport phonebookService from '../services/phonebook'\n\nconst AddContactForm = ({contacts, setContacts, newName, setNewName, newNumber, setNewNumber, setNotificationMessage, setErrorMessage}) => {\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const addContact = (event) => {\n    event.preventDefault()\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (contacts.map(contact => contact.name).indexOf(newName) >= 0) {\n      if (window.confirm(`${newContact.name} is already in the phonebook. Replace the old number with the new one?`)) {\n        updateContact(newContact)\n      }\n      return\n    }\n\n    phonebookService.create(newContact)\n      .then(response => setContacts(contacts.concat(response)))\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => setErrorMessage(null), 5000)\n      })\n    setNewName('')\n    setNewNumber('')\n    setNotificationMessage((`${newContact.name} was added to the phonebook`))\n    setTimeout(() => setNotificationMessage(null), 5000)\n  }\n\n  const updateContact = (updatedContact) => {\n    const id = contacts.find(contact => contact.name === updatedContact.name)['id']\n    phonebookService.update(id, updatedContact)\n      .then(response => {\n        setContacts(contacts.map(contact => contact.id !== id ? contact : response))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage((`${updatedContact.name}'s phone number was updated`))\n        setTimeout(() => setNotificationMessage(null), 5000)\n      })\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => setErrorMessage(null), 5000)\n      })\n  }\n\n  return (\n    <form onSubmit={addContact}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} /><br />\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddContactForm\n","import React from 'react'\nimport phonebookService from '../services/phonebook'\n\nconst Contacts = ({filteredContacts, contacts, setContacts, setErrorMessage}) => {\n  const deleteContact = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      phonebookService.remove(id)\n        .then(response => {\n          filteredContacts = filteredContacts.filter(contact => contact.id !== id)\n          setContacts(contacts.filter(contact => contact.id !== id))\n        })\n        .catch(error => {\n          setErrorMessage(`unable to delete contact with id ${id}`)\n          setTimeout(() => setErrorMessage(null), 5000)\n        })\n    }\n  }\n\n  return (\n    <>\n      {filteredContacts.map((contact) =>\n        <p key={contact.id}>\n          {contact.name} {contact.number}\n          <button type=\"button\" onClick={() => deleteContact(contact.id, contact.name)}>delete</button>\n        </p>\n      )}\n    </>\n  )\n}\n\nexport default Contacts\n","import React from 'react'\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\n\nconst Filter = ({filter, setFilter}) => {\n  const handleFilterChange = (event) => setFilter(event.target.value)\n  return (\n    <>\n      search contacts <input value={filter} onChange={handleFilterChange} /> (leave empty to show all contacts)<br />\n    </>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport AddContactForm from './components/AddContactForm'\nimport Contacts from './components/Contacts'\nimport Error from './components/Error'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport phonebookService from './services/phonebook'\n\nconst App = () => {\n  const [ filter, setFilter] = useState('')\n  const [ contacts, setContacts] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(response => {\n        setContacts(response)\n      })\n  }, [])\n\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>Add new contact</h2>\n      <AddContactForm contacts={contacts} setContacts={setContacts} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} setNotificationMessage={setNotificationMessage} setErrorMessage={setErrorMessage} />\n      <h2>Numbers</h2>\n      <Contacts filteredContacts={filteredContacts} contacts={contacts} setContacts={setContacts} setErrorMessage={setErrorMessage} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}